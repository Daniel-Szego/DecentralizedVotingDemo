/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Simple blind voting algorithm, voting values are simple integers
 */
namespace org.decentralizedvoting.model

/**
 * ASSETS
 */

enum VotingStates{
  o INITIATED
  o VOTING
  o CALCULATING
  o CLOSED
}

concept ValueOfVote {
  o Integer value
  o String valueSecription
  o Integer votes
}

asset VotingRound identified by votingRoundId {
  o String votingRoundId
  o VotingStates votingStates
  o ValueOfVote[] valueOfVote
  o Integer votingResult optional
  o Integer votingResultDescription optional
}

enum VoteState {
  o VOTED
  o REVEALED
}

asset Vote identified by voteId {
  o String voteId
  o String hash
  o VoteState voteSate
  --> VotingRound votingRound
  --> Voter voter
}

/**
 * PARTICIPANTS
 */

participant Voter identified by voterId {
  o String voterId
  o String firstName
  o String lastName
}

participant Admin identified by adminId {
  o String adminId
}

/**
 * TRANSACTIONS
 */

transaction CreateTestDataTransaction {
}

transaction ClearDataTransaction {
}

transaction StartVotingTransaction {
  --> VotingRound votingRound
}

transaction CalculateVotesTransaction {
    --> VotingRound votingRound
}

transaction VoteTransaction {
  --> VotingRound votingRound
  --> Voter voter
  o String hash 
}

transaction RevealVoteTransaction {
  --> Vote vote
  o Integer voteValue 
  o String salt 
}

/**
 * EVENTS
 */

event VotingStartedEvent {
  --> VotingRound votingRound
}

event VotingFinishedEvent {
  --> VotingRound votingRound
  o Integer result
}
